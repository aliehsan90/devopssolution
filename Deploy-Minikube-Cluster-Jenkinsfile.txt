pipeline {
    agent {
        label 'linux'
    }

    environment {
        ECR_REPO = 'public.ecr.aws/w9s4r9v3'
        AWS_REGION = 'us-east-1'
        REMOTE_HOST = '54.228.225.218'
        REMOTE_USER = 'ec2-user'
        REMOTE_WORKDIR = '/root/energi-node-statefulset/'
        STATEFULSET_FILE = 'energi-node-statefulset.yml'

    }
     stages {
        stage('Build and Push Docker Image') {
            steps {
                script {
                    // SSH commands to execute on the remote server
                    def sshCommands = """
                        cd ${REMOTE_WORKDIR}
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}
                        docker build -t energi-node-ecr .
                        docker tag energi-node-ecr:latest ${ECR_REPO}:latest
                        docker push ${ECR_REPO}/energi-node-ecr:latest
                    """
                    
                    // Execute SSH commands
                    sshScript(sshCommands)
                }
            }
        }

        stage('Deploying on Minikube Cluster') {
            steps {
                script {
                    def deployCommands = """
                        cd ${REMOTE_WORKDIR}
                        kubectl apply -f ${STATEFULSET_FILE}
                    """
                    
                    // Execute SSH commands
                    sshScript(deployCommands)
                }
            }
        }
    }
   
}

def sshScript(String script) {
    sh "ssh ${REMOTE_USER}@${REMOTE_HOST} << 'EOF'\n${script}\nEOF"
}


